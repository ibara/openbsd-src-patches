Index: Symbols.list
===================================================================
RCS file: /cvs/src/lib/libc/Symbols.list,v
retrieving revision 1.73
diff -u -p -r1.73 Symbols.list
--- Symbols.list	24 Oct 2019 05:57:41 -0000	1.73
+++ Symbols.list	27 Dec 2019 16:35:18 -0000
@@ -1538,6 +1538,7 @@ opterr
 optind
 optopt
 optreset
+posix_fadvise
 posix_memalign
 posix_openpt
 ptsname
Index: stdlib/Makefile.inc
===================================================================
RCS file: /cvs/src/lib/libc/stdlib/Makefile.inc,v
retrieving revision 1.64
diff -u -p -r1.64 Makefile.inc
--- stdlib/Makefile.inc	16 Dec 2017 20:06:55 -0000	1.64
+++ stdlib/Makefile.inc	27 Dec 2019 16:35:18 -0000
@@ -7,8 +7,8 @@ SRCS+=	a64l.c abort.c atexit.c atoi.c at
 	exit.c ecvt.c gcvt.c getenv.c getopt_long.c \
 	getsubopt.c hcreate.c heapsort.c imaxabs.c imaxdiv.c insque.c \
 	l64a.c llabs.c lldiv.c lsearch.c malloc.c reallocarray.c \
-	merge.c posix_pty.c qsort.c radixsort.c rand.c random.c \
-	realpath.c remque.c setenv.c strtoimax.c \
+	merge.c posix_fadvise.c posix_pty.c qsort.c radixsort.c rand.c \
+	random.c realpath.c remque.c setenv.c strtoimax.c \
 	strtol.c strtoll.c strtonum.c strtoul.c strtoull.c strtoumax.c \
 	system.c \
 	tfind.c thread_atexit.c tsearch.c \
@@ -28,6 +28,7 @@ SRCS+=	abs.c div.c labs.c ldiv.c
 MAN+=	a64l.3 abort.3 abs.3 alloca.3 atexit.3 atof.3 atoi.3 atol.3 atoll.3 \
 	bsearch.3 div.3 ecvt.3 exit.3 getenv.3 getopt.3 getopt_long.3 \
 	getsubopt.3 hcreate.3 imaxabs.3 imaxdiv.3 insque.3 labs.3 ldiv.3 \
-	lldiv.3 lsearch.3 malloc.3 posix_memalign.3 posix_openpt.3 ptsname.3 \
-	qsort.3 radixsort.3 rand48.3 rand.3 random.3 realpath.3 \
-	strtod.3 strtonum.3 strtol.3 strtoul.3 system.3 tsearch.3
+	lldiv.3 lsearch.3 malloc.3 posix_fadvise.3 posix_memalign.3 \
+	posix_openpt.3 ptsname.3 qsort.3 radixsort.3 rand48.3 rand.3 \
+	random.3 realpath.3 strtod.3 strtonum.3 strtol.3 strtoul.3 system.3 \
+	tsearch.3
Index: stdlib/posix_fadvise.3
===================================================================
RCS file: stdlib/posix_fadvise.3
diff -N stdlib/posix_fadvise.3
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ stdlib/posix_fadvise.3	27 Dec 2019 16:35:19 -0000
@@ -0,0 +1,144 @@
+.\" Copyright (c) 1991, 1993
+.\"	The Regents of the University of California.  All rights reserved.
+.\"
+.\" Redistribution and use in source and binary forms, with or without
+.\" modification, are permitted provided that the following conditions
+.\" are met:
+.\" 1. Redistributions of source code must retain the above copyright
+.\"    notice, this list of conditions and the following disclaimer.
+.\" 2. Redistributions in binary form must reproduce the above copyright
+.\"    notice, this list of conditions and the following disclaimer in the
+.\"    documentation and/or other materials provided with the distribution.
+.\" 3. Neither the name of the University nor the names of its contributors
+.\"    may be used to endorse or promote products derived from this software
+.\"    without specific prior written permission.
+.\"
+.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
+.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
+.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
+.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
+.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
+.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
+.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+.\" SUCH DAMAGE.
+.\"
+.\"	@(#)madvise.2	8.1 (Berkeley) 6/9/93
+.\" $FreeBSD: head/lib/libc/sys/posix_fadvise.2 314436 2017-02-28 23:42:47Z imp $
+.\"
+.Dd $Mdocdate: June 22 2019 $
+.Dt POSIX_FADVISE 3
+.Os
+.Sh NAME
+.Nm posix_fadvise
+.Nd give advice about use of file data
+.Sh SYNOPSIS
+.In fcntl.h
+.Ft int
+.Fn posix_fadvise "int fd" "off_t offset" "off_t len" "int advice"
+.Sh DESCRIPTION
+.Em Note
+that this implementation is a no-op.
+It only does some failure checks.
+Any
+.Fa advice
+has no effect on the system's data access behavior.
+.Pp
+The
+.Fn posix_fadvise
+function
+allows a process to describe to the system its data access behavior for an
+open file descriptor
+.Fa fd .
+The advice covers the data starting at offset
+.Fa offset
+and continuing for
+.Fa len
+bytes.
+If
+.Fa len
+is zero,
+all data from
+.Fa offset
+to the end of the file is covered.
+.Pp
+The behavior is specified by the
+.Fa advice
+parameter and may be one of:
+.Bl -tag -width POSIX_FADV_SEQUENTIAL
+.It Dv POSIX_FADV_NORMAL
+Tells the system to revert to the default data access behavior.
+.It Dv POSIX_FADV_RANDOM
+Is a hint that file data will be accessed randomly,
+and prefetching is likely not advantageous.
+.It Dv POSIX_FADV_SEQUENTIAL
+Tells the system that file data will be accessed sequentially.
+This currently does nothing as the default behavior uses heuristics to
+detect sequential behavior.
+.It Dv POSIX_FADV_WILLNEED
+Tells the system that the specified data will be accessed in the near future.
+The system may initiate an asynchronous read of the data if it is not already
+present in memory.
+.It Dv POSIX_FADV_DONTNEED
+Tells the system that the specified data will not be accessed in the near
+future.
+The system may decrease the in-memory priority of clean data within the
+specified range and future access to this data may require a read operation.
+.It Dv POSIX_FADV_NOREUSE
+Tells the system that the specified data will only be accessed once and
+then not reused.
+The system may decrease the in-memory priority of data once it has been
+read or written.
+Future access to this data may require a read operation.
+.El
+.Sh RETURN VALUES
+If successful,
+.Fn posix_fadvise
+returns zero.
+It returns an error on failure, without setting
+.Va errno .
+.Sh ERRORS
+Possible failure conditions:
+.Bl -tag -width Er
+.It Bq Er EBADF
+The
+.Fa fd
+argument is not a valid file descriptor.
+.It Bq Er EINVAL
+The
+.Fa advice
+argument is not valid.
+.It Bq Er EINVAL
+The
+.Fa offset
+or
+.Fa len
+arguments are negative,
+or
+.Fa offset
++
+.Fa len
+is greater than the maximum file size.
+.It Bq Er ENODEV
+The
+.Fa fd
+argument does not refer to a regular file.
+.It Bq Er ESPIPE
+The
+.Fa fd
+argument is associated with a pipe or FIFO.
+.El
+.Sh SEE ALSO
+.Xr madvise 2
+.Sh STANDARDS
+The
+.Fn posix_fadvise
+interface conforms to
+.St -p1003.1-2001 .
+.Sh HISTORY
+The
+.Fn posix_fadvise
+function first appeared in
+.Ox 6.7 .
Index: stdlib/posix_fadvise.c
===================================================================
RCS file: stdlib/posix_fadvise.c
diff -N stdlib/posix_fadvise.c
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ stdlib/posix_fadvise.c	27 Dec 2019 16:35:19 -0000
@@ -0,0 +1,55 @@
+/*-
+ * Copyright (c) 2019 The DragonFly Project.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in
+ *    the documentation and/or other materials provided with the
+ *    distribution.
+ * 3. Neither the name of The DragonFly Project nor the names of its
+ *    contributors may be used to endorse or promote products derived
+ *   from this software without specific, prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+ * FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE
+ * COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES (INCLUDING,
+ * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
+ * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+ * SUCH DAMAGE.
+ */
+
+#include <sys/stat.h>
+
+#include <errno.h>
+#include <fcntl.h>
+#include <limits.h>
+#include <stdlib.h>
+
+int
+posix_fadvise(int fd, off_t offset, off_t len, int advice)
+{
+	struct stat buf;
+	int ret;
+
+	if (offset < 0 || len < 0 || offset > LLONG_MAX - len ||
+	    advice < POSIX_FADV_NORMAL || advice > POSIX_FADV_NOREUSE)
+		return (EINVAL);
+	if ((ret = fstat(fd, &buf)) != 0)
+		return (ret);
+	if (S_ISFIFO(buf.st_mode))
+		return (ESPIPE);
+	/* do nothing */
+	return (0);
+}
+DEF_WEAK(posix_fadvise);
Index: sys/madvise.2
===================================================================
RCS file: /cvs/src/lib/libc/sys/madvise.2,v
retrieving revision 1.22
diff -u -p -r1.22 madvise.2
--- sys/madvise.2	26 Dec 2019 01:01:06 -0000	1.22
+++ sys/madvise.2	27 Dec 2019 16:35:19 -0000
@@ -92,7 +92,8 @@ Otherwise an error number will be return
 .Xr minherit 2 ,
 .Xr mprotect 2 ,
 .Xr msync 2 ,
-.Xr munmap 2
+.Xr munmap 2 ,
+.Xr posix_fadvise 3
 .Sh STANDARDS
 The
 .Fn posix_madvise
